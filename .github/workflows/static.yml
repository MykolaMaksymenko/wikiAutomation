name: Playwright tests for WIKI

on:
    # Runs on pushes targeting the default branch
    push:
        branches: [main]
    pull_request:
        branches: [main]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
    contents: write
    pages: write
    id-token: write

jobs:
    # Single deploy job since we're just deploying
    wiki_tests:
        timeout-minutes: 60
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 18
            - name: Install dependencies
              run: yarn
            - name: Install Playwright Browsers
              run: yarn install:browsers
            - name: Run Playwright tests
              run: |
                  echo "## TEST RUN SUMMARY:" >> $GITHUB_STEP_SUMMARY
                  yarn test >> $GITHUB_STEP_SUMMARY
            - uses: actions/upload-artifact@v4
              if: ${{ !cancelled() }}
              with:
                  name: test-results
                  path: test-results/
                  retention-days: 30
    deploy_results:
        if: always()
        needs: [wiki_tests]
        outputs:
            timestamp: ${{ steps.timestampid.outputs.timestamp }}
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
            - name: Install dependencies
              run: yarn
            - name: Run Playwright tests
              run: |
                  echo "Downloading the artifacts"
            - uses: actions/download-artifact@v4
              if: ${{ !cancelled() }}
              with:
                  name: test-results
                  path: test-results/
                  retention-days: 1
            - name: Display structure of downloaded files
              run: ls -R
            - name: Check files
              run: |
                  ls -la
            - name: Set a timestamp
              id:
                  timestampid
                  # this will store current time with UTC in outputs.timestamp (eg of value: 20231028_233147Z)
              run: echo "timestamp=$(date --utc +%Y%m%d_%H%M%SZ)" >> "$GITHUB_OUTPUT"
            - name: Deploy the playwright report
              uses: peaceiris/actions-gh-pages@v4
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  publish_dir: /home/runner/work/wikiAutomation/test-results
                  destination_dir: ${{ steps.timestampid.outputs.timestamp }}
            - name: Write URL in summary
              run: echo "### Test results - https://${{ github.repository_owner }}.github.io/wikiAutomation/${{ steps.timestampid.outputs.timestamp }}/" >> $GITHUB_STEP_SUMMARY
